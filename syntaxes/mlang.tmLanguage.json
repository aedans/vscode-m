{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "M Language",
	"patterns": [
		{
			"include": "#expression"
		}
	],
	"repository": {
		"expression": {
			"patterns": [
				{
					"include": "#parenthesized-expression"
				},
				{
					"include": "#bracketed-expression"
				},
				{
					"include": "#number-expression"
				},
				{
					"include": "#symbol-expression"
				},
				{
					"include": "#string-expression"
				},
				{
					"include": "#char-expression"
				},
				{
					"include": "#comment"
				}
			]
		},
		"parenthesized-expression": {
			"name": "meta.parenthesized.mlang",
			"begin": "\\(([a-zA-Z0-9]([a-zA-Z0-9]|[!$%&*+/|:<=>?@^~'=-])*)?",
			"end": "\\)",
			"beginCaptures": {
				"0": {
					"name": "punctuation.mlang"
				},
				"1": {
					"name": "keyword.mlang"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.mlang"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"bracketed-expression": {
			"name": "meta.bracketed.mlang",
			"begin": "\\[",
			"end": "\\]",
			"beginCaptures": {
				"0": {
					"name": "punctuation.mlang"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.mlang"
				}
			},
			"patterns": [
				{
					"include": "#atomic-expression"
				}
			]
		},
		"number-expression": {
			"name": "constant.numeric.mlang",
			"match": "[-+]?([0-9]*\\.[0-9]+|[0-9]+)"
		},
		"symbol-expression": {
			"name": "variable.mlang",
			"match": "[a-zA-Z0-9]([a-zA-Z0-9]|[!$%&*+/|:<=>?@^~'=-])*"
		},
		"string-expression": {
			"name": "string.quoted.mlang",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "string.quoted.mlang",
					"match": "[^\"]|\"\""
				}
			]
		},
		"char-expression": {
			"name": "string.quoted.single.mlang",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "string.quoted.single.mlang",
					"match": "[^']|''"
				}
			]
		},
		"doc-expression": {
			"patterns": [
				{
					"include": "#parenthesized-expression"
				},
				{
					"include": "#bracketed-expression"
				},
				{
					"include": "#number-expression"
				},
				{
					"include": "#symbol-literal-expression"
				},
				{
					"include": "#comment"
				}
			]
		},
		"comment-char": {
			"name": "comment.mlang",
			"match": "."
		},
		"comment": {
			"patterns": [
				{
					"include": "#doc-comment"
				},
				{
					"include": "#parenthesized-block-comment"
				},
				{
					"include": "#bracketed-block-comment"
				},
				{
					"include": "#line-comment"
				}
			]
		},
		"parenthesized-block-comment": {
			"name": "meta.comment.block.parenthesized.mlang",
			"begin": "#\\(",
			"end": "\\)",
			"beginCaptures": {
				"0": {
					"name": "comment.block.mlang"
				}
			},
			"endCaptures": {
				"0": {
					"name": "comment.block.mlang"
				}
			},
			"patterns": [
				{
					"include": "#doc-expression"
				},
				{
					"include": "#comment-char"
				}
			]
		},
		"bracketed-block-comment": {
			"name": "meta.comment.block.bracketed.mlang",
			"begin": "#\\[",
			"end": "\\]",
			"beginCaptures": {
				"0": {
					"name": "comment.block.mlang"
				}
			},
			"endCaptures": {
				"0": {
					"name": "comment.block.mlang"
				}
			},
			"patterns": [
				{
					"include": "#doc-expression"
				},
				{
					"include": "#comment-char"
				}
			]
		},
		"line-comment": {
			"name": "meta.comment.line.mlang",
			"begin": "#",
			"end": "\r|\n",
			"beginCaptures": {
				"0": {
					"name": "comment.line.mlang"
				}
			},
			"patterns": [
				{
					"include": "#comment-char"
				}
			]
		}
	},
	"scopeName": "source.m"
}